{"version":3,"file":"static/js/229.25c5b2eb.chunk.js","mappings":"8SAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAA8BC,EAA9B,+BAA2C,QAASC,EAApD,+BAAkE,OAC/DC,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,oBAAiCE,EAAjC,YAA+CC,GAAe,CAACC,OAAAA,IALnF,cAKGG,EALH,yBAMIA,GANJ,mEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGL,EAAS,CACXK,MAAAA,EACAJ,QAASN,GAHV,SAMoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,gBAAqC,CAACI,OAAAA,IAN1D,cAMGG,EANH,yBAOIA,GAPJ,kEAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,GAAY,CAACP,OAAAA,IAL/D,cAKGG,EALH,yBAMIA,GANJ,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,EAA9B,YAAkD,CAACP,OAAAA,IALvE,cAKGG,EALH,yBAMIA,GANJ,kEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,EAA9B,YAAkD,CAACP,OAAAA,IALvE,cAKGG,EALH,yBAMIA,GANJ,kE,oFCxCMO,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OACnBC,GAD4C,EAAjBC,YAChBC,EAAAA,EAAAA,OAEjB,OACI,wBAAKH,EAAOI,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,YAAb,OACZ,2BACI,yBAAI,SAAC,KAAD,CAASC,GAAE,mBAAcH,GAAMI,MAAO,CAAEC,KAAMT,GAA9C,SAA2DK,OAC/D,gBAAKK,IAAG,yCAAoCJ,GAAeK,IAAKN,MAF3DD,EADG,KAQvB,C,8ECQD,UAlBa,WACT,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAQA,OALAC,EAAAA,EAAAA,YAAU,YAEN7B,EAAAA,EAAAA,MAAiB8B,MAAK,SAAAC,GAAG,OAAIH,EAAUG,EAAIC,KAAKC,QAAvB,GAC5B,GAAE,KAGC,+BACI,SAAC,IAAD,CACInB,OAAQA,KAIvB,C","sources":["api/Api.jsx","components/moviesList/MoviesList.jsx","pages/home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '3102fd9d415f7daf1e30271b3b4dfac5';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovieTrends(media_type = 'movie', time_window = 'week') {\n    const params = {\n        api_key: KEY,        \n    }    \n    \n    const response = await axios.get(`${BASE_URL}trending/${media_type}/${time_window}`, {params});\n    return response;    \n}\n\nexport async function getMovies(query) {\n    const params = {\n        query,\n        api_key: KEY,      \n    }    \n    \n    const response = await axios.get(`${BASE_URL}search/movie`, {params});\n    return response;    \n}\n\nexport async function getMovieById(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {params});\n    return response;    \n}\n\nexport async function getCast(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {params});\n    return response;    \n}\n\nexport async function getReview(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {params});\n    return response;    \n}","import { NavLink, useLocation } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies, getMovieId }) => {\n    const location = useLocation();\n    \n    return (\n        <ul>{movies.map(({id, title, poster_path}) =>\n            <li key={id}>\n                <h2><NavLink to={`/movies/:${id}`} state={{ from: location }}>{title}</NavLink></h2>\n                <img src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title} />        \n            </li>)\n        }\n        </ul>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { getMovieTrends } from \"api/Api\";\nimport { MoviesList } from \"components/moviesList/MoviesList\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    // const [page, setPage] = useState(1);\n\n    useEffect(() => {        \n    \n        getMovieTrends().then(res => setMovies(res.data.results))\n    }, [])    \n\n    return (\n        <>\n            <MoviesList\n                movies={movies}                \n            />\n        </>\n    )\n}\n\nexport default Home;"],"names":["KEY","BASE_URL","getMovieTrends","media_type","time_window","params","api_key","axios","response","getMovies","query","getMovieById","movie_id","getCast","getReview","MoviesList","movies","location","getMovieId","useLocation","map","id","title","poster_path","to","state","from","src","alt","useState","setMovies","useEffect","then","res","data","results"],"sourceRoot":""}