{"version":3,"file":"static/js/519.1ed4fabe.chunk.js","mappings":"8SAEMA,EAAW,gCAEXC,EAAS,CACPC,QAAS,oCAGV,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,8FAAoCC,EAApC,+BAAiD,QAASC,EAA1D,+BAAwE,OAC3EL,EAAOG,KAAOA,EADX,SAGoBG,EAAAA,GAAAA,IAAA,UAAaP,EAAb,oBAAiCK,EAAjC,YAA+CC,GAAe,CAACL,OAAAA,IAHnF,cAGGO,EAHH,yBAIIA,GAJJ,mEAOA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAyBC,EAAON,GAAhC,8EACHH,EAAOS,MAAQA,EACfT,EAAOG,KAAOA,EAFX,SAIoBG,EAAAA,GAAAA,IAAA,UAAaP,EAAb,gBAAqC,CAACC,OAAAA,IAJ1D,cAIGO,EAJH,yBAKIA,GALJ,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFAEoBL,EAAAA,GAAAA,IAAA,UAAaP,EAAb,iBAA8BY,GAAY,CAACX,OAAAA,IAF/D,cAEGO,EAFH,yBAGIA,GAHJ,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,uFAEoBL,EAAAA,GAAAA,IAAA,UAAaP,EAAb,iBAA8BY,EAA9B,YAAkD,CAACX,OAAAA,IAFvE,cAEGO,EAFH,yBAGIA,GAHJ,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,uFAEoBL,EAAAA,GAAAA,IAAA,UAAaP,EAAb,iBAA8BY,EAA9B,YAAkD,CAACX,OAAAA,IAFvE,cAEGO,EAFH,yBAGIA,GAHJ,kE,2JChCMO,EAAOC,EAAAA,GAAAA,GAAH,+HAOJC,EAAOD,EAAAA,GAAAA,GAAH,qR,SCLJE,EAAO,WAChB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAUC,EAAAA,EAAAA,MAMhB,IAJAC,EAAAA,EAAAA,YAAU,YACNX,EAAAA,EAAAA,IAAQS,GAASG,MAAK,SAAAC,GAAG,OAAIL,EAAQK,EAAIC,KAAKP,KAArB,GAC5B,GAAE,CAACE,IAEe,IAAhBF,EAAKQ,OAER,OACI,SAACb,EAAD,UACKK,EAAKS,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,aAAZ,OACN,UAACf,EAAD,YACI,gBAAKgB,IAAG,yCAAoCD,GAAgBE,IAAKH,KACjE,uBAAIA,MAFGD,EADL,KAOrB,EAED,G","sources":["api/Api.jsx","components/cast/Cast.styled.jsx","components/cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst params = {        \n        api_key: '3102fd9d415f7daf1e30271b3b4dfac5',        \n    }\n\nexport async function getMovieTrends(page, media_type = 'movie', time_window = 'week') {\n    params.page = page;\n        \n    const response = await axios.get(`${BASE_URL}trending/${media_type}/${time_window}`, {params});\n    return response;    \n}\n\nexport async function getMovies(query, page) {    \n    params.query = query;\n    params.page = page; \n    \n    const response = await axios.get(`${BASE_URL}search/movie`, {params});\n    return response;    \n}\n\nexport async function getMovieById(movie_id) {   \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {params});\n    return response;    \n}\n\nexport async function getCast(movie_id) {    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {params});\n    return response;    \n}\n\nexport async function getReview(movie_id) {    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {params});\n    return response;    \n}","import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n    margin: 0;\n    padding: 20px 0;\n    list-style: none;\n    background-color: white;        \n    `\n\nexport const Item = styled.li`\n    p {\n        margin: 5px 0;\n        padding: 20px 20px;\n        background-color: #fffbf5\n    }\n\n    img {\n        display: block;\n        padding-left: 20px;\n    }\n        \n    :not(:last-child) {\n        margin-bottom: 5px;\n    }\n    `","import { useOutletContext } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getCast } from \"api/Api\";\nimport { List, Item } from \"./Cast.styled\";\n\nexport const Cast = () => {\n    const [cast, setCast] = useState([]);    \n    const movieId = useOutletContext();\n\n    useEffect(() => {\n        getCast(movieId).then(res => setCast(res.data.cast))\n    }, [movieId])\n   \n    if(cast.length === 0) return\n\n    return (\n        <List>\n            {cast.map(({id, name, profile_path}) =>\n                <Item key={id}>\n                    <img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={name} />\n                    <p>{name}</p>\n                </Item>)}\n        </List>\n    )\n}\n\nexport default Cast;"],"names":["BASE_URL","params","api_key","getMovieTrends","page","media_type","time_window","axios","response","getMovies","query","getMovieById","movie_id","getCast","getReview","List","styled","Item","Cast","useState","cast","setCast","movieId","useOutletContext","useEffect","then","res","data","length","map","id","name","profile_path","src","alt"],"sourceRoot":""}