{"version":3,"file":"static/js/771.2129afc2.chunk.js","mappings":"8SAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAA8BC,EAA9B,+BAA2C,QAASC,EAApD,+BAAkE,OAC/DC,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,oBAAiCE,EAAjC,YAA+CC,GAAe,CAACC,OAAAA,IALnF,cAKGG,EALH,yBAMIA,GANJ,mEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGL,EAAS,CACXK,MAAAA,EACAJ,QAASN,GAHV,SAMoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,gBAAqC,CAACI,OAAAA,IAN1D,cAMGG,EANH,yBAOIA,GAPJ,kEAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,GAAY,CAACP,OAAAA,IAL/D,cAKGG,EALH,yBAMIA,GANJ,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,EAA9B,YAAkD,CAACP,OAAAA,IALvE,cAKGG,EALH,yBAMIA,GANJ,kEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,EAA9B,YAAkD,CAACP,OAAAA,IALvE,cAKGG,EALH,yBAMIA,GANJ,kE,uGCtCMO,EAAOC,EAAAA,GAAAA,GAAH,iPAUJC,EAAOD,EAAAA,GAAAA,GAAH,0GAOJE,EAAQF,EAAAA,GAAAA,GAAH,4HAOLG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gNAUJK,EAASL,EAAAA,GAAAA,IAAH,+G,SCnCNM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACV,EAAD,UAAOQ,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,YAAb,OACd,SAACZ,EAAD,WACI,UAACE,EAAD,CAAMW,GAAE,mBAAcH,GAAMI,MAAO,CAAEC,KAAMR,GAA3C,WACI,SAACN,EAAD,UAAQU,KACR,SAACP,EAAD,CAAQY,IAAG,yCAAoCJ,GAAeK,IAAKN,QAHhED,EADG,KAUzB,C,sHCfYQ,E,OAAOnB,GAAAA,KAAH,+D,SCoBjB,EAjBa,WACT,OAA4BoB,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,YAENpC,EAAAA,EAAAA,MAAiBqC,MAAK,SAAAC,GAAG,OAAIH,EAAUG,EAAIC,KAAKC,QAAvB,GAC5B,GAAE,KAGC,SAACP,EAAD,WACI,SAACb,EAAA,EAAD,CACAC,OAAQA,KAInB,C","sources":["api/Api.jsx","components/moviesList/MoviesList.styled.jsx","components/moviesList/MoviesList.jsx","pages/home/Home.styled.jsx","pages/home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '3102fd9d415f7daf1e30271b3b4dfac5';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovieTrends(media_type = 'movie', time_window = 'week') {\n    const params = {\n        api_key: KEY,        \n    }    \n    \n    const response = await axios.get(`${BASE_URL}trending/${media_type}/${time_window}`, {params});\n    return response;    \n}\n\nexport async function getMovies(query) {\n    const params = {\n        query,\n        api_key: KEY,      \n    }    \n    \n    const response = await axios.get(`${BASE_URL}search/movie`, {params});\n    return response;    \n}\n\nexport async function getMovieById(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {params});\n    return response;    \n}\n\nexport async function getCast(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {params});\n    return response;    \n}\n\nexport async function getReview(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {params});\n    return response;    \n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 40px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 10px;\n    margin: 0 auto;    \n    padding: 0;\n    list-style: none;    \n    `\n\nexport const Item = styled.li`\n    \n    width: 200px;\n    margin-left: auto;\n    margin-right: auto;    \n    `\n\nexport const Title = styled.h1`\n    margin: auto 0;\n    padding: 5px 10px;\n    text-align: center;\n    font-size: 20px;    \n    `\n\nexport const Link = styled(NavLink)`\n    display: flex;\n    flex-direction: column;    \n    justify-content: space-between;\n    height: 100%;\n    text-decoration: none;\n    cursor: inherit;\n    color: inherit;\n    `\n\nexport const Poster = styled.img`\n    display: block;\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n    `\n    ","import { useLocation } from \"react-router-dom\";\nimport { List, Item, Title, Link, Poster } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    \n    return (\n        <List>{movies.map(({id, title, poster_path}) =>\n            <Item key={id}>\n                <Link to={`/movies/:${id}`} state={{ from: location }}>                    \n                    <Title>{title}</Title>                    \n                    <Poster src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title} />                    \n                </Link>    \n            </Item>)\n        }\n        </List>\n    )\n}","import styled from \"styled-components\";\n\nexport const Main = styled.main`    \n    background-color: #fffbf5\n    `","import { useState, useEffect } from \"react\";\nimport { getMovieTrends } from \"api/Api\";\nimport { MoviesList } from \"components/moviesList/MoviesList\";\nimport { Main } from \"pages/home/Home.styled\";\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);    \n\n    useEffect(() => {        \n    \n        getMovieTrends().then(res => setMovies(res.data.results))\n    }, [])    \n\n    return (\n        <Main>\n            <MoviesList                \n            movies={movies}                \n        />\n        </Main>        \n    )\n}\n\nexport default Home;"],"names":["KEY","BASE_URL","getMovieTrends","media_type","time_window","params","api_key","axios","response","getMovies","query","getMovieById","movie_id","getCast","getReview","List","styled","Item","Title","Link","NavLink","Poster","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Main","useState","setMovies","useEffect","then","res","data","results"],"sourceRoot":""}