{"version":3,"file":"static/js/758.76b4a771.chunk.js","mappings":"8SAEMA,EAAM,mCACNC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAA8BC,EAA9B,+BAA2C,QAASC,EAApD,+BAAkE,OAC/DC,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,oBAAiCE,EAAjC,YAA+CC,GAAe,CAACC,OAAAA,IALnF,cAKGG,EALH,yBAMIA,GANJ,mEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gFACGL,EAAS,CACXK,MAAAA,EACAJ,QAASN,GAHV,SAMoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,gBAAqC,CAACI,OAAAA,IAN1D,cAMGG,EANH,yBAOIA,GAPJ,kEAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,GAAY,CAACP,OAAAA,IAL/D,cAKGG,EALH,yBAMIA,GANJ,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,EAA9B,YAAkD,CAACP,OAAAA,IALvE,cAKGG,EALH,yBAMIA,GANJ,kEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,gFACGP,EAAS,CACXC,QAASN,GAFV,SAKoBO,EAAAA,GAAAA,IAAA,UAAaN,EAAb,iBAA8BW,EAA9B,YAAkD,CAACP,OAAAA,IALvE,cAKGG,EALH,yBAMIA,GANJ,kE,sFCTP,UA7BqB,WAAO,IAAD,IACvB,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACNX,EAAAA,EAAAA,IAAaY,OAAOL,EAAQM,MAAM,KAAKC,MAAK,SAAAC,GAAG,OAAIT,EAASS,EAAIC,KAAjB,GAClD,GAAE,CAACT,IAEAF,EAAJ,CAEA,IAAQY,EAAuDZ,EAAvDY,MAAOC,EAAgDb,EAAhDa,SAAUC,EAAsCd,EAAtCc,YAAaC,EAAyBf,EAAzBe,aAChCC,EADyDhB,EAAXiB,OAC/BC,KAAI,SAAAF,GAAK,OAAIA,EAAMG,IAAV,IAAgBC,KAAK,MAEnD,OACI,iCACI,SAAC,KAAD,CAASC,GAAE,oBAAEjB,EAASkB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAArC,+BACA,gBAAKC,IAAG,yCAAoCV,GAAeW,IAAI,WAC/D,wBAAKb,KACL,uBAAIG,KACJ,uBAAIF,KACJ,uBAAIG,KACJ,SAAC,KAAD,CAASK,GAAI,OAAb,mBACA,SAAC,KAAD,CAASA,GAAI,UAAb,sBACA,SAAC,KAAD,CAAQK,QAASnB,OAAOL,EAAQM,MAAM,QAf7B,CAkBpB,C","sources":["api/Api.jsx","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '3102fd9d415f7daf1e30271b3b4dfac5';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovieTrends(media_type = 'movie', time_window = 'week') {\n    const params = {\n        api_key: KEY,        \n    }    \n    \n    const response = await axios.get(`${BASE_URL}trending/${media_type}/${time_window}`, {params});\n    return response;    \n}\n\nexport async function getMovies(query) {\n    const params = {\n        query,\n        api_key: KEY,      \n    }    \n    \n    const response = await axios.get(`${BASE_URL}search/movie`, {params});\n    return response;    \n}\n\nexport async function getMovieById(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {params});\n    return response;    \n}\n\nexport async function getCast(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {params});\n    return response;    \n}\n\nexport async function getReview(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {params});\n    return response;    \n}","import { useParams, Outlet, NavLink, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieById } from \"api/Api\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();    \n    const location = useLocation();\n    \n    useEffect(() => {\n        getMovieById(Number(movieId.slice(1))).then(res => setMovie(res.data))\n    }, [movieId])\n    \n    if(!movie) return\n    \n    const { title, overview, poster_path, vote_average, genres } = movie;\n    const genre = genres.map(genre => genre.name).join(', ');\n    \n    return (\n        <>\n            <NavLink to={location.state?.from ?? '/'}>Back to products</NavLink>\n            <img src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt=\"title\" />\n            <h1>{title}</h1>\n            <p>{vote_average}</p>\n            <p>{overview}</p>\n            <p>{genre}</p>\n            <NavLink to={'cast'}>Cast</NavLink>\n            <NavLink to={'reviews'}>Reviews</NavLink>\n            <Outlet context={Number(movieId.slice(1))} />\n        </>\n    )    \n}\n\nexport default MovieDetails;"],"names":["KEY","BASE_URL","getMovieTrends","media_type","time_window","params","api_key","axios","response","getMovies","query","getMovieById","movie_id","getCast","getReview","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","Number","slice","then","res","data","title","overview","poster_path","vote_average","genre","genres","map","name","join","to","state","from","src","alt","context"],"sourceRoot":""}