{"version":3,"file":"static/js/72.b96dbdaa.chunk.js","mappings":"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","sources":["api/Api.jsx","components/loadMoreBtn/LoadMoreBtn.styled.jsx","components/loadMoreBtn/LoadMoreBtn.jsx","components/moviesList/MoviesList.styled.jsx","components/moviesList/MoviesList.jsx","components/searchBar/SearchBar.styled.jsx","components/searchBar/SearchBar.jsx","pages/movies/Movies.styled.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst params = {        \n        api_key: '2fb750d568eb262625e8479b2db30963',        \n    }\n\nexport async function getMovieTrends(page, media_type = 'movie', time_window = 'week') {\n    params.page = page;\n        \n    const response = await axios.get(`${BASE_URL}trending/${media_type}/${time_window}`, {params});\n    return response;    \n}\n\nexport async function getMovies(query, page) {    \n    params.query = query;\n    params.page = page; \n    \n    const response = await axios.get(`${BASE_URL}search/movie`, {params});\n    return response;    \n}\n\nexport async function getMovieById(movie_id) {   \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {params});\n    return response;    \n}\n\nexport async function getCast(movie_id) {    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {params});\n    return response;    \n}\n\nexport async function getReview(movie_id) {    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {params});\n    return response;    \n}\n","import styled from \"styled-components\"\n\nexport const Button = styled.button`    \n    margin: 10px 0;\n    padding: 10px;\n    border-radius: 4px;\n    background-color: tomato;\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    text-align: center;\n    display: inline-block;\n    color: #fff;\n    border: 0;\n    text-decoration: none;\n    outline: none;\n    cursor: pointer;\n    font-family: inherit;\n    font-size: 16px;    \n    width: 100px;\n    \n        :hover, :focus {\n            opacity: 0.8;\n            box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n                0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n        }\n    `","import { Button } from \"./LoadMoreBtn.styled\"\nimport PropTypes from \"prop-types\";\n    \nexport const LoadMoreButton = ({onClick, children}) => {\n    return <Button type=\"button\" onClick={onClick}>{children}</Button>\n}\n\nLoadMoreButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.node,\n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 40px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 10px;\n    margin: 0 auto;    \n    padding: 10px 0;\n    list-style: none;\n    border-bottom: 1px solid tomato;\n    background-color: #fffbf5;\n    `\n\nexport const Item = styled.li`    \n    width: 200px;\n    margin: 0 auto;\n    background-color: #fff;\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n                0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    \n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        :hover, :focus {            \n            transform: scale(1.05);\n        }\n    `\n\nexport const Title = styled.h1`\n    margin: auto 0;\n    padding: 10px 10px 10px 10px;\n    text-align: center;\n    font-size: 20px;    \n    `\n\nexport const Link = styled(NavLink)`\n    display: flex;\n    flex-direction: column;    \n    justify-content: space-between;\n    height: 100%;\n    text-decoration: none;\n    cursor: inherit;\n    color: inherit;\n    outline: none;    \n    `\n\nexport const Poster = styled.img`\n    display: block;\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n    `","import { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { List, Item, Title, Link, Poster } from \"./MoviesList.styled\";\n\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    \n    return (\n        <List>{movies.map(({id, title, poster_path}) =>\n            <Item key={id}>\n                <Link to={`/movies/:${id}`} state={{ from: location }}>                    \n                    <Title>{title}</Title>                    \n                    <Poster src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title} />                    \n                </Link>    \n            </Item>)\n        }\n        </List>\n    )\n}\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string.isRequired,\n    })).isRequired,\n}","import styled from \"styled-components\";\n\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    padding: 20px 0 0 0;\n    width: 100%;\n    max-width: 600px;    \n    border-radius: 3px;\n    overflow: hidden;\n    `\n\nexport const Button = styled.button`\n    display: inline-block;\n    margin-left: -40px;\n    width: 40px;\n    height: 40px;\n    border: 0;\n    color: tomato;\n    background-color: inherit;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n        :hover {\n            color: red;            \n        }\n    `\n\nexport const ButtonLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n    `\n\n\nexport const Input = styled.input`\n    display: inline-block;\n    width: 100%;\n    height: 25px;\n    font: inherit;\n    font-size: 14px;    \n    border: 1px solid tomato;\n    border-radius: 4px;\n    outline: none;\n    padding-left: 4px;\n    padding - right: 4px;\n    background-color: inherit;\n        ::placeholder {\n            opacity: 0.4;\n            font: inherit;\n        }\n    `\n\nexport const Label = styled.label`\n    width: 50%;\n    `","import { useState } from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport PropTypes from \"prop-types\";\nimport { Form, Button, ButtonLabel, Label, Input } from './SearchBar.styled';\n\nexport const SearchBar = ({searchQuery, onSubmit}) => {\n    const [query, setQuery] = useState(searchQuery);\n\n    const handleChange = (e) => {     \n        setQuery(e.currentTarget.value)        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();         \n        \n        if (query.trim().toLowerCase() === '') {\n\n            toast('Please, enter some query')\n            \n            e.currentTarget.input.value = ''\n            return\n        }\n\n        if (query === searchQuery) {\n\n            toast('Please, try different query')\n            \n            return\n        }\n                \n        onSubmit(query)        \n    }\n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Button type=\"submit\">\n                    <ButtonLabel>Search</ButtonLabel>\n                    <IconContext.Provider\n                        value={{\n                                size: '100%',\n                                style: { verticalAlign: 'middle' }\n                            }}>\n                        <AiOutlineSearch />\n                    </IconContext.Provider>\n            </Button>\n            <Label aria-label=\"search movie\">\n                <Input value={query} type=\"text\" name='input' onChange={handleChange} placeholder='Find Your favorite movie'/>\n            </Label>\n        </Form>\n    )\n}\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    searchQuery: PropTypes.string.isRequired,\n}","import styled from \"styled-components\";\n\nexport const Main = styled.main`\n    width: 100wv;\n    height: 100vh;\n    text-align: center;\n    background-color: #fffbf5\n    `\n\nexport const NotificationMessage = styled.p`\n    margin: 0;\n    padding: 20px;    \n    color: red;\n    `","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { getMovies } from \"api/Api\";\nimport { SearchBar } from \"components/searchBar/SearchBar\";\nimport { MoviesList } from \"components/moviesList/MoviesList\";\nimport { LoadMoreButton } from \"components/loadMoreBtn/LoadMoreBtn\";\nimport { Main, NotificationMessage } from \"./Movies.styled\";\n\nconst Movies = () => {   \n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(null);\n    const [status, setStatus] = useState('idle');\n    const [error, setError] = useState(null);\n    const [showLoadMore, setShowLoadMore] = useState(true);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? '';\n\n    useEffect(() => {\n        setPage(1);\n    }, [])\n    \n    useEffect(() => {\n\n        if (!query || !page) return;\n\n        setStatus('pending');        \n\n        getMovies(query, page).then(res => {            \n            \n            if (res.data.total_pages === 0) {                \n                throw new Error(`Sorry, tere's no ${query} movie in our store`)\n            }\n\n            if (res.data.total_pages === 1) {                \n                setShowLoadMore(false);\n            }\n\n            if (res.data.total_pages < page && page > 1) {          \n                setShowLoadMore(false);                \n                toast(\"It seems You've just reached the end of the list\");\n            }\n           \n            setMovies(state => [...state, ...res.data.results]);\n            setStatus('resolved');            \n\n        }).catch(error => {\n            setError(error.message);\n            setShowLoadMore(false);\n            setStatus('rejected');\n        })\n            \n    }, [query, page])\n\n    const handleSubmit = (query) => {        \n        setMovies([]);\n        setPage(1);\n        setShowLoadMore(true);\n        setSearchParams({ query });\n    }\n\n    const handleLoadMore = () => setPage(state => state + 1)    \n    \n    return (        \n        <Main>\n            <SearchBar searchQuery={query} onSubmit={handleSubmit} />\n            {status === 'rejected' && <NotificationMessage>{error}</NotificationMessage>}\n            {status === 'resolved' && <MoviesList\n                movies={movies} />}\n            {status === 'resolved' && showLoadMore &&\n                <LoadMoreButton onClick={handleLoadMore}>Load more</LoadMoreButton>}\n        </Main>\n    )\n}\n\nexport default Movies;"],"names":["BASE_URL","params","api_key","getMovieTrends","page","media_type","time_window","axios","response","getMovies","query","getMovieById","movie_id","getCast","getReview","Button","styled","LoadMoreButton","onClick","children","type","List","Item","Title","Link","NavLink","Poster","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Form","ButtonLabel","Input","Label","SearchBar","searchQuery","onSubmit","useState","setQuery","e","preventDefault","trim","toLowerCase","toast","currentTarget","input","value","size","style","verticalAlign","name","onChange","placeholder","Main","NotificationMessage","setMovies","setPage","status","setStatus","error","setError","showLoadMore","setShowLoadMore","useSearchParams","searchParams","setSearchParams","get","useEffect","then","res","data","total_pages","Error","results","catch","message"],"sourceRoot":""}