{"version":3,"file":"static/js/283.1ce5ab63.chunk.js","mappings":"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","sources":["api/Api.jsx","pages/movieDetails/MovieDetails.styled.jsx","pages/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '3102fd9d415f7daf1e30271b3b4dfac5';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovieTrends(media_type = 'movie', time_window = 'week') {\n    const params = {\n        api_key: KEY,        \n    }    \n    \n    const response = await axios.get(`${BASE_URL}trending/${media_type}/${time_window}`, {params});\n    return response;    \n}\n\nexport async function getMovies(query) {\n    const params = {\n        query,\n        api_key: KEY,      \n    }    \n    \n    const response = await axios.get(`${BASE_URL}search/movie`, {params});\n    return response;    \n}\n\nexport async function getMovieById(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {params});\n    return response;    \n}\n\nexport async function getCast(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {params});\n    return response;    \n}\n\nexport async function getReview(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {params});\n    return response;    \n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Main = styled.main`    \n    background-color: #fffbf5\n    `\n\nexport const Poster = styled.img`\n    display: block;\n    padding-left: 20px;\n    padding-bottom: 20px;\n    `\n\nexport const Info = styled.div`\n    padding-left: 20px;\n    padding-bottom: 20px;\n    width: 60%;\n    `\n\nexport const Thumb = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 20px;\n    `\n\nexport const Title = styled.h1`\n    margin: 0;\n    `\n\nexport const Text = styled.p`\n    margin: 0;\n    margin-top: 10px\n    `\n\nexport const Link = styled(NavLink)`\n    display: inline-block;\n    text-decoration: none;\n    border-bottom: 1px solid tomato;\n    padding: 10px 10px 5px 10px;    \n    color: black;\n\n        :hover, :focus {\n            color: gray;\n        }\n    `","import { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getMovieById, getCast, getReview } from \"api/Api\";\nimport { Main, Link, Info, Poster, Thumb, Title, Text } from \"./MovieDetails.styled\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [cast, setCast] = useState([]);\n    const [reviews, setReviews] = useState([])\n    const { movieId } = useParams();    \n    const location = useLocation();    \n    \n    \n    useEffect(() => {\n        getMovieById(Number(movieId.slice(1))).then(res => setMovie(res.data))\n    }, [movieId])\n\n    useEffect(() => {\n        getCast(Number(movieId.slice(1))).then(res => setCast(res.data.cast))\n    }, [movieId])\n\n    useEffect(() => {\n        getReview(Number(movieId.slice(1))).then(res => setReviews(res.data.results))\n    }, [movieId])\n\n        \n    if(!movie) return\n    \n    const { title, overview, poster_path, vote_average, genres } = movie;\n    const genre = genres.map(genre => genre.name).join(', ');\n    console.log(typeof(vote_average));\n    return (        \n        <Main>\n            <Link to={location.state?.from ?? '/'}>Back to movie list</Link>\n            <Thumb>\n                <Poster src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt=\"title\" />\n                <Info>\n                    <Title>{title}</Title>\n                    <Text><b>Audience rate:</b> {(vote_average * 10).toFixed(1)}%</Text>\n                    <Text><b>Plot:</b> {overview}</Text>\n                    <Text><b>Genre:</b> {genre}</Text>\n                </Info>\n            </Thumb>\n            <Link to={'cast'}>Cast</Link>\n            <Link to={'reviews'} style={{marginLeft: '10px'}}>Reviews</Link>\n            <Outlet context={[cast, setCast, reviews, setReviews ]} />            \n        </Main>\n    )    \n}\n\nexport default MovieDetails;"],"names":["KEY","BASE_URL","getMovieTrends","media_type","time_window","params","api_key","axios","response","getMovies","query","getMovieById","movie_id","getCast","getReview","Main","styled","Poster","Info","Thumb","Title","Text","Link","NavLink","useState","movie","setMovie","cast","setCast","reviews","setReviews","movieId","useParams","location","useLocation","useEffect","Number","slice","then","res","data","results","title","overview","poster_path","vote_average","genre","genres","map","name","join","console","log","to","state","from","src","alt","toFixed","style","marginLeft","context"],"sourceRoot":""}