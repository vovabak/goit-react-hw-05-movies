{"version":3,"file":"static/js/72.0664da34.chunk.js","mappings":"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","sources":["api/Api.jsx","components/moviesList/MoviesList.styled.jsx","components/moviesList/MoviesList.jsx","components/searchBar/SearchBar.styled.jsx","components/searchBar/SearchBar.jsx","pages/movies/Movies.styled.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '3102fd9d415f7daf1e30271b3b4dfac5';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovieTrends(media_type = 'movie', time_window = 'week') {\n    const params = {\n        api_key: KEY,        \n    }    \n    \n    const response = await axios.get(`${BASE_URL}trending/${media_type}/${time_window}`, {params});\n    return response;    \n}\n\nexport async function getMovies(query) {\n    const params = {\n        query,\n        api_key: KEY,      \n    }    \n    \n    const response = await axios.get(`${BASE_URL}search/movie`, {params});\n    return response;    \n}\n\nexport async function getMovieById(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}`, {params});\n    return response;    \n}\n\nexport async function getCast(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits`, {params});\n    return response;    \n}\n\nexport async function getReview(movie_id) {\n    const params = {        \n        api_key: KEY,\n    }    \n    \n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews`, {params});\n    return response;    \n}","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 40px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 10px;\n    margin: 0 auto;    \n    padding: 0;\n    list-style: none;    \n    `\n\nexport const Item = styled.li`\n    \n    width: 200px;\n    margin-left: auto;\n    margin-right: auto;    \n    `\n\nexport const Title = styled.h1`\n    margin: auto 0;\n    padding: 5px 10px;\n    text-align: center;\n    font-size: 20px;    \n    `\n\nexport const Link = styled(NavLink)`\n    display: flex;\n    flex-direction: column;    \n    justify-content: space-between;\n    height: 100%;\n    text-decoration: none;\n    cursor: inherit;\n    color: inherit;\n    `\n\nexport const Poster = styled.img`\n    display: block;\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n    `\n    ","import { useLocation } from \"react-router-dom\";\nimport { List, Item, Title, Link, Poster } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n    \n    return (\n        <List>{movies.map(({id, title, poster_path}) =>\n            <Item key={id}>\n                <Link to={`/movies/:${id}`} state={{ from: location }}>                    \n                    <Title>{title}</Title>                    \n                    <Poster src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title} />                    \n                </Link>    \n            </Item>)\n        }\n        </List>\n    )\n}","import styled from \"styled-components\";\n\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    width: 100%;\n    max-width: 600px;    \n    border-radius: 3px;\n    overflow: hidden;\n    `\n\nexport const Button = styled.button`\n    display: inline-block;  \n    width: 38px;\n    height: 38px;\n    border: 0;\n    color: tomato;\n    background-color: inherit;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n        :hover {\n            color: red;            \n        }\n    `\n\nexport const ButtonLabel = styled.span`\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n    `\n\n\nexport const Input = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 14px;    \n    border: 1px solid tomato;\n    border-radius: 4px;\n    outline: none;\n    padding-left: 4px;\n    padding - right: 4px;\n    background-color: inherit;\n        ::placeholder {\n            opacity: 0.4;\n            font: inherit;\n        }\n    `","import { useState } from \"react\";\nimport { AiOutlineSearch } from 'react-icons/ai';\n// import { toast } from 'react-toastify';\nimport { IconContext } from \"react-icons\";\n// import PropTypes from \"prop-types\";\nimport { Form, Button, ButtonLabel, Input } from './SearchBar.styled';\n\nexport const SearchBar = ({query: prevQuery, onSubmit}) => {\n    const [query, setQuery] = useState('');\n\n    const handleChange = (e) => {     \n        setQuery(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();         \n        \n        if (query.trim().toLowerCase() === '') {\n\n            // toast('Please, enter some query')\n            \n            e.currentTarget.searchQuery.value = ''\n            return\n        }\n\n        if (query === prevQuery) {\n\n            // toast('Please, try different query')\n            \n            return\n        }\n                \n        onSubmit(query)        \n    }\n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Button type=\"submit\">\n                    <ButtonLabel>Search</ButtonLabel>\n                    <IconContext.Provider\n                        value={{\n                                size: '100%',\n                                style: { verticalAlign: 'middle' }\n                            }}>\n                        <AiOutlineSearch />\n                    </IconContext.Provider>\n            </Button>\n            <label aria-label=\"search movie\">\n                <Input type=\"text\" name='searchQuery' onChange={handleChange} placeholder='Find Your favorite movie'/>\n            </label>\n        </Form>\n    )\n}\n\n","import styled from \"styled-components\";\n\n\nexport const Main = styled.main`\n    width: 100wv;\n    height: 100vh;\n    background-color: #fffbf5\n    `","import { useState, useEffect } from \"react\";\nimport { getMovies } from \"api/Api\";\nimport { SearchBar } from \"components/searchBar/SearchBar\";\nimport { MoviesList } from \"components/moviesList/MoviesList\";\nimport { Main } from \"./Movies.styled\";\n\nconst Movies = () => {\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n\n    const handleSubmit = (newQuery) => {        \n        setQuery(newQuery);        \n    }\n\n    useEffect(() => {\n\n        if (!query) return;\n\n        getMovies(query).then(res => {            \n            setMovies(res.data.results)\n        })\n        \n    }, [query])\n\n    return (\n        <Main>\n            <SearchBar onSubmit={handleSubmit} />\n            <MoviesList\n                movies={movies}                \n            />\n        </Main>\n    )\n}\n\nexport default Movies;"],"names":["KEY","BASE_URL","getMovieTrends","media_type","time_window","params","api_key","axios","response","getMovies","query","getMovieById","movie_id","getCast","getReview","List","styled","Item","Title","Link","NavLink","Poster","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Form","Button","ButtonLabel","Input","SearchBar","prevQuery","onSubmit","useState","setQuery","e","preventDefault","trim","toLowerCase","currentTarget","searchQuery","value","type","size","style","verticalAlign","name","onChange","placeholder","Main","setMovies","useEffect","then","res","data","results","newQuery"],"sourceRoot":""}